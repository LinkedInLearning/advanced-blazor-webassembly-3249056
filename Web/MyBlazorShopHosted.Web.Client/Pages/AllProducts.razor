@page "/all-products"
@using MyBlazorShopHosted.Libraries.Shared.Product.Models
@using MyBlazorShopHosted.Web.Client.Shared.Layout
@inject HttpClient httpClient
<div class="all-products">
    <h1>First table</h1>
    @if (Products != null)
    {
        <table class="all-products">
            <thead>
                <tr>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Description</th>
                    <th>Price</th>
                </tr>
            </thead>
                <tbody>
                <Virtualize Items="Products" Context="product" OverscanCount="1" ItemSize="200">
                    <tr>
                        <td>
                            <img src="/images/@product.Image?a=@product.GetHashCode()" width="300" />
                        </td>
                        <td>
                            <strong>@product.Name</strong>
                        </td>
                        <td>
                            @product.Description
                        </td>
                        <td>
                            <strong>@product.Price.ToString("c")</strong>
                        </td>
                    </tr>
                </Virtualize>
            </tbody>
        </table>
    }
    <h2>Second Products</h2>
    <table class="all-products">
        <thead>
            <tr>
                <th>Image</th>
                <th>Name</th>
                <th>Description</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>            
            <Virtualize ItemsProvider="LoadProducts" Context="product" OverscanCount="1" ItemSize="200">
                <ItemContent>
                    <tr>
                        <td>
                            <img src="/images/@product.Image?a=@product.GetHashCode()" width="300" />
                        </td>
                        <td>
                            <strong>@product.Name</strong>
                        </td>
                        <td>
                            @product.Description
                        </td>
                        <td>
                            <strong>@product.Price.ToString("c")</strong>
                        </td>
                    </tr>
                </ItemContent>
                <Placeholder>
                    <p>Loading...</p>
                </Placeholder>
            </Virtualize>            
        </tbody>
    </table>
    

</div>
@code {
    private List<ProductModel>? Products { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Products = await httpClient.GetFromJsonAsync<List<ProductModel>>("/api/product");
    }

    private async ValueTask<ItemsProviderResult<ProductModel>> LoadProducts(ItemsProviderRequest request)
    {
        var products = await httpClient.GetFromJsonAsync<List<ProductModel>>(string.Format("/api/product/start-index?size={0}&startIndex={1}", request.Count, request.StartIndex));
        var totalCount = await httpClient.GetFromJsonAsync<int>("/api/product/count");

        if (products != null)
        {
            return new ItemsProviderResult<ProductModel>(products, totalCount);
        }
        return new ItemsProviderResult<ProductModel>(new List<ProductModel>(), totalCount);
    }

}
