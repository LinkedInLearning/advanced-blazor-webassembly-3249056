@using MyBlazorShopHosted.Web.Client.Shared.Template
@using MyBlazorShopHosted.Web.Client.Components
@using System.Globalization
@using Microsoft.Extensions.Localization
@using MyBlazorShopHosted.Libraries.Shared.ShoppingCart.Models
@page "/cart"
@inject HttpClient httpClient
@inject IStringLocalizer<ShoppingCart> localizer
<PageTitle>@localizer["Title"]</PageTitle>
<HeadContent>
    <meta name="description" content="@localizer["Title"] page" />
</HeadContent>
<div id="vue-cart" class="quenched">
    <main class="margin-horizontal:auto max-width:container padding-horizontal:32">
        <div>
            <h1 class="font-weight:500 @@mq-960--margin-bottom:24 color:blue-265f8e font-size:36 line-height:1_222 margin-bottom:12 margin-top:24">@localizer["Title"]</h1>
            <div class="display:flex flex-direction:column color:blue-265f8e margin-bottom:12">
                <TableTemplate HeaderNames="@TableHeaderNames">
                    <RowTemplate>
                        @if (ShoppingCartItems?.Items != null)
                        {
                            @foreach (var item in ShoppingCartItems.Items)
                            {
                                <ShoppingCartItem Item="item"></ShoppingCartItem>
                            }
                        }
                    </RowTemplate>
                </TableTemplate>
            </div>
        </div>
    </main>
</div>
@code {
    private List<TableHeaderName> TableHeaderNames = new() {
        new TableHeaderName("Product", 2),
        new TableHeaderName("Price", 1),
        new TableHeaderName("Quantity", 1),
        new TableHeaderName("Total", 1),
        new TableHeaderName("Remove", 1)
    };

    private ShoppingCartModel? ShoppingCartItems { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ShoppingCartItems = await httpClient.GetFromJsonAsync<ShoppingCartModel?>(
           "/api/shopping-cart"
        );
        await base.OnInitializedAsync();
    }
}