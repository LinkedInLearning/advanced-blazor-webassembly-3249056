@using MyBlazorShopHosted.Web.Client.Shared.Template
@using MyBlazorShopHosted.Web.Client.Components
@using System.Globalization
@using MyBlazorShopHosted.Libraries.Shared.ShoppingCart.Models
@page "/cart"
@inject HttpClient httpClient
<PageTitle>Shopping cart page</PageTitle>
<HeadContent>
    <meta name="description" content="Shopping cart page" />
    <link href="/css/bigstarcollectables.cart.css" rel="stylesheet" />
</HeadContent>
<section id="cart">
    <h1>My Shopping Cart <small>(@(ShoppingCartItems?.Items != null ? ShoppingCartItems.Items.Sum(s => s.Quantity).ToString() : "0") item(s))</small></h1>
    <form>
    <TableTemplate HeaderNames="@TableHeaderNames">
        <RowTemplate>
            @if (ShoppingCartItems?.Items != null)
            {
                @foreach (var item in ShoppingCartItems.Items)
                {
                    <ShoppingCartItem Item="item"></ShoppingCartItem>
                }
            }
        </RowTemplate>
    </TableTemplate>
    </form>
</section>
@code {
    private List<TableHeaderName> TableHeaderNames = new() {
        new TableHeaderName("Product"),
        new TableHeaderName("Price"),
        new TableHeaderName("Quantity"),
        new TableHeaderName("Total"),
        new TableHeaderName("Remove")
    };

    private ShoppingCartModel? ShoppingCartItems { get; set; }

    protected override async Task OnInitializedAsync()
    {
        ShoppingCartItems = await httpClient.GetFromJsonAsync<ShoppingCartModel?>(
           "/api/shopping-cart"
        );
        await base.OnInitializedAsync();
    }
}