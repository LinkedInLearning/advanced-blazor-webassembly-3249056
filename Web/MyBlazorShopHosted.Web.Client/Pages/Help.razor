@page "/help"
@inject HttpClient httpClient
@using System.Net.Http.Headers
@using MyBlazorShopHosted.Libraries.Shared.Upload.Extensions
@using MyBlazorShopHosted.Libraries.Shared.Upload.Models
<HeadContent>
    <link href="/css/bigstarcollectables.help.css" rel="stylesheet" />
</HeadContent>
<section id="help">
    <h1>Help</h1>
    <p>Please upload a screenshot of the problem you're having.</p>
    <form>
        <InputFile @key=InputFileId.ToString() OnChange="OnInputFileChange" />
        <button class="button lg solid gold" type="button" @onclick="UploadImageAsync">Upload image</button>
    </form>
    @if (Errors?.Any() ?? false)
    {
        <p>The following errors occured:</p>
        <ul>
            @foreach (var error in Errors)
            {
                <li>@error</li>
            }
        </ul>
    }
    @if (Success)
    {
        <p>The file has been successfully uploaded.</p>
    }
</section>
@code {
    private Guid InputFileId = Guid.NewGuid();
    private IReadOnlyList<IBrowserFile>? UploadFiles { get; set; }

    private List<string>? Errors { get; set; }
    private bool Success { get; set; }
}
@functions {
    private void OnInputFileChange(InputFileChangeEventArgs e)
    {
        UploadFiles = e.GetMultipleFiles();
        this.StateHasChanged();
    }

    private async Task UploadImageAsync()
    {
        Success = false;

        if (UploadFiles == null)
        {
            return;
        }

        foreach (var uploadFile in UploadFiles)
        {
            var uploadFileBuffer = new byte[uploadFile.Size];
            await uploadFile.OpenReadStream().ReadAsync(uploadFileBuffer);

            var errors = AllowedUploadFileHelper.ValidateFile(uploadFile.Name, uploadFileBuffer, uploadFile.Size);
        }

        using var content = new MultipartFormDataContent();

        foreach (var uploadFile in UploadFiles)
        {
            var fileContent = new StreamContent(uploadFile.OpenReadStream());
            fileContent.Headers.ContentType = new MediaTypeHeaderValue(uploadFile.ContentType);

            content.Add(content: fileContent, name: "\"files\"", fileName: uploadFile.Name);
        }

        var response = await (await httpClient.PostAsync("/api/file/upload", content)).Content.ReadFromJsonAsync<AllowedUploadFileResult>();

        InputFileId = Guid.NewGuid();
    }
}